// Generated by CoffeeScript 1.7.1
var Account, Getters, Playlist, passport;

passport = require('passport');

Account = require('../models/account').Account;

Playlist = require('../models/playlist').Playlist;

Getters = require('./getter');

module.exports = function(app) {
  app.get('/', function(req, res) {
    console.log('GET view index');
    return res.render('index', {
      title: 'Disko'
    });
  });
  app.get('/player', function(req, res) {
    console.log('GET view player');
    return res.render('player', {
      title: 'Disko'
    });
  });
  app.get('/playlists', function(req, res) {
    console.log('GET view playlists');
    res.render('playlists');
    return {
      title: 'Disko'
    };
  });
  app.get('/:user/:playlist', function(req, res) {
    console.log('GET playlist ' + req.params.playlist + 'view');
    return res.render('player');
  });
  app.get('/data/:user/:playlist.json', function(req, res) {
    console.log('GET playlist ' + req.params.playlist + ' JSON object');
    return Playlist.find({
      id: req.params.id
    }, function(err, data) {
      if (!err) {
        return res.json({
          result: 'OK',
          content: data
        });
      } else {
        return res.json({
          result: 'error',
          content: null
        });
      }
    });
  });
  app.get('/:user', function(req, res) {
    console.log('GET user ' + req.params.playlist + 'view');
    return res.render('player');
  });
  app.get('/data/:user/info.json', function(req, res) {
    console.log('GET user info ' + req.params.playlist + ' JSON object');
    return Account.find({
      nickname: req.params.user
    }, function(err, data) {
      if (!(err || data.length < 1)) {
        return res.json({
          result: 'OK',
          content: data
        });
      } else {
        return res.json({
          result: 'error',
          content: null
        });
      }
    });
  });
  app.get('/data/playlists.json', function(req, res) {
    console.log('GET playlist' + req.params.id + ' JSON object');
    return Playlist.find({}, function(err, data) {
      if (!err) {
        return res.json({
          result: 'OK',
          content: data
        });
      } else {
        return res.json({
          result: 'error',
          content: null
        });
      }
    });
  });
  app.get('/signup', function(req, res) {
    return res.render('signup', {
      title: 'Disko'
    });
  });
  app.post('/signup', function(req, res) {
    return Account.register(new Account({
      username: req.body.username
    }), req.body.password, function(err, account) {
      if (err) {
        res.render('signup', {
          info: "Sorry. That username already exists. Try again."
        });
      }
      return passport.authenticate('local', function(req, res) {
        return res.redirect('/');
      });
    });
  });
  app.get('/login', function(req, res) {
    return res.render('login', {
      title: 'Disko'
    });
  });
  app.post('/login', passport.authenticate('local', function(req, res) {
    return res.redirect('/');
  }));
  app.get('/logout', function(req, res) {
    req.logout();
    return res.redirect('/');
  });
  app.get('/ping', function(req, res) {
    return res.send('pong!', 200);
  });
  return app.get('/getter', function(req, res) {
    console.log(req.query.url);
    return Getters.dispatch(req.query.url, function(data) {
      return res.send(data);
    });
  });
};
