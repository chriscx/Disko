// Generated by CoffeeScript 1.7.1
var Schema, User, mongoose, userSchema;

mongoose = require('mongoose');

Schema = mongoose.Schema;

userSchema = new Schema({
  firstname: String,
  lastname: String,
  email: String,
  password: String,
  signupDate: {
    type: Date,
    "default": Date.now
  }
}, {
  collection: "users"
});

User = mongoose.model("User", userSchema);

module.exports = {
  get: function(id, callback) {
    User.find({
      _id: id
    }, "firstname lastname email signupDate", function(err, data, numberAffected) {
      if (!err) {
        err = null;
      }
      callback(err, data);
    });
  },
  create: function(info, callback) {
    var newUser;
    newUser = new User(info);
    newUser.save(function(err, newUser, numberAffected) {
      if (!err) {
        err = null;
      }
      callback(err, newUser);
    });
  },
  remove: function(id, callback) {
    User.remove({
      _id: id
    }, function(err, data) {
      if (!err) {
        err = null;
      }
      callback(err, data);
    }).remove();
  },
  checkPassword: function(email, password, callback) {
    User.find({
      email: email
    }, function(err, data) {
      if (!err) {
        err = null;
      }
      if (data.length > 0) {
        if (data[0].password === password) {
          callback(err, {
            check: true,
            userId: data[0]._id
          });
        } else {
          callback(err, {
            check: false,
            userId: null
          });
        }
      } else {
        callback("User not found.");
      }
    });
  }
};
