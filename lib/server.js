// Generated by CoffeeScript 1.7.1
var Account, app, bodyParser, clientErrorHandler, errorHandler, express, fs, io, logErrors, methodOverride, mongoose, passport, path, server, stylus;

fs = require('fs');

path = require('path');

express = require('express');

bodyParser = require("body-parser");

methodOverride = require("method-override");

mongoose = require('mongoose');

stylus = require('stylus');

passport = require('passport');

Account = require('./models/account').Account;

logErrors = function(err, req, res, next) {
  console.error(err.stack);
  return next(err);
};

clientErrorHandler = function(err, req, res, next) {
  if (req.xhr) {
    return res.send(500, {
      error: "Something blew up!"
    });
  } else {
    return next(err);
  }
};

errorHandler = function(err, req, res, next) {
  res.status(500);
  return res.render("error", {
    error: err
  });
};

app = express();

app.use(function(err, req, res, next) {
  console.error(err.stack);
  return res.send(500, "Something broke!");
});

app.use(bodyParser.urlencoded({
  extended: true
}));

app.use(bodyParser.json());

app.use(methodOverride());

app.use(logErrors);

app.use(clientErrorHandler);

app.use(errorHandler);

app.set('views', path.normalize(__dirname + '/views'));

app.set('view engine', 'jade');

app.set('view options', {
  pretty: true
});

app.use(stylus.middleware("" + __dirname + "/../public"));

app.use(express["static"]("" + __dirname + "/../public"));

mongoose.connect('mongodb://localhost/disko_dev');

require('./routes')(app);

server = require('http').Server(app);

io = require('socket.io')(server);

server.listen(3000);
